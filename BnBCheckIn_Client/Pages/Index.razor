@page "/"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IJSRuntime jsRuntime
@inject IAmenityService amenityService
@inject NavigationManager navManager


<div class="row p-0 m-0">
    <div class="jumbotron jumbotron-fluid">
        <div class="container">
            <h1 class="display-4 texthero">B&ampB Check In</h1>
            <h3>Boek hier de mooiste B&ampB's van Vlaanderen.</h3>
            <h5>(En ja, binnenkort gaan we ook wat verder weg!  )</h5>
        </div>
    </div>
</div>
<hr />
<EditForm Model="HomeModel" OnValidSubmit="SaveInitialData">
    <div class="row p-0 mx-0 mt-4 mb-4">

        <div class="col-4 col-md-2" style="margin-left: 5%;">
            <div class="form-group">
                <span class="badge bg-info">Maak hier uw keuze</span>
            </div>
        </div>

        <div class="col-4 col-md-2">
            <div class="form-group">
                <label>Incheckdatum</label>
                <InputDate min="@DateTime.Now.ToString("yyyy-MM-dd")" @bind-Value="HomeModel.StartDate"
                           class="form-control" />
            </div>
        </div>

        <div class="col-4 col-md-2">
            <div class="form-group">
                <label>Uitcheckdatum</label>
                <InputDate @bind-Value="HomeModel.EndDate" min="@HomeModel.StartDate.AddDays(1).ToString("yyyy-MM-dd")"
                           class="form-control" />
            </div>
        </div>

        <div class=" col-4 col-md-2">
            <div class="form-group">
                <label>Provincie</label>
                <select @bind="HomeModel.Province" class="form-control">
                    @foreach (var p in Provinces)
                    {
                        <option value="@p">@p</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-4 col-md-2 p-0 pr-2">
            <div class="form-group">
                <label>&nbsp;</label>

                <input type="submit" value="Go" class="btn btn-info btn-block" />

            </div>
        </div>

    </div>
</EditForm>
<hr />
<div class="container-fluid pt-4" style="background-color: #333;">
    <div class="row">
        <div class="col-md-8 offset-md-2 text-center text-light">
            <h2>Overzicht van alle B&ampB- en kamerfaciliteiten</h2>
            <p class="lead">Alle voorzieningen, de bijhorende icoontjes én een woordje uitleg, speciaal voor u opgelijst.</p>
        </div>
    </div>
    <div class="row">
        @foreach (var amenity in Amenities)
        {
            <div class="col-md-3 col-4 p-4">
                <div style="border:1px solid #d5d5d5; border-radius:20px; background-color:#fff;">
                    <div class="row col-4 offset-4 p-4">
                        <i class="@amenity.AmenityIcon fa-4x"></i>
                    </div>
                    <div class="text-center justify-content-center">
                        <h5 class="text-info">@amenity.AmenityName</h5>
                        <p>@((MarkupString)amenity.AmenityDescription)</p>
                    </div>

                </div>
            </div>
        }
    </div>

</div>

@*-----------------------------------------------------------------------------------------------------------------------------*@

@code{
    public HomeVM HomeModel { get; set; } = new HomeVM();

    public IEnumerable<AmenityDTO> Amenities { get; set; } = new List<AmenityDTO>();

    public List<string> Provinces { get; set; } = new List<string>() { "alle provincies", "Antwerpen", "Vlaams-Brabant", "West-Vlaanderen", "Oost-Vlaanderen", "Limburg" };

    //-----------------------------------------------------------------------------------------------------------------

    protected override async Task OnInitializedAsync()
    {
        Amenities = await amenityService.GetAmenities();
    }

    private async Task SaveInitialData()
    {
        try
        {
            HomeModel.NoOfNights = (HomeModel.EndDate - HomeModel.StartDate).Days;


            if (HomeModel.NoOfNights < 0)
            {
                await jsRuntime.SweetAlertError("Aantal nachten kan niet negatief zijn. Probeer opnieuw.");
                return;
            }
            else
            {
                await localStorage.SetItemAsync(LocalStorage.LS_InitialBooking, HomeModel);

                navManager.NavigateTo("/bnbs", forceLoad: true);
            }


        }
        catch (Exception)
        {
            await jsRuntime.SweetAlertError("Er is iets misgegaan bij het ingeven van jouw voorkeurdata. Probeer opnieuw.");
        }
    }
}