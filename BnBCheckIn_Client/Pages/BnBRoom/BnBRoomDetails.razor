@page "/bnb/room-details/{Id:int}"
@inject IJSRuntime jsRuntime
@inject ILocalStorageService localStorage
@inject IBnBRoomService bnbRoomService
@inject IStripePaymentService stripePaymentService
@inject IRoomOrderDetailsService roomOrderDetailsService
@attribute [Authorize(Roles = RoleDefinition.Role_User)]


@if (BnBRoomBooking?.OrderDetails?.BnBRoomDTO?.RoomImages is null)
{
    <div class="spinner"></div>
}
else
{
    <div class="mt-4 mx-4 px-0 px-md-5 mx-md-5">

        <div class="row p-2 my-3 " style="border-radius:20px; ">
            <div class="col-12 col-lg-7 p-4" style="border: 1px solid #333">
                <div class="row px-2 text-success border-bottom">
                    <div class="col-8 py-1"><p style="font-size:x-large;margin:0px;">Geselecteerde kamer</p></div>
                    <div class="col-4 p-0"><a href="hotel/rooms" class="btn btn-secondary btn-block">Terug naar overzicht kamers</a></div>
                </div>

                <div class="row">
                    <div class="col-6">
                        <div id="" class="carousel slide mb-4 m-md-3 m-0 pt-3 pt-md-0" data-ride="carousel">
                            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                                    <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                                </ol>
                                <div class="carousel-inner">
                                    <div class="carousel-item active">
                                        <img class="d-block w-100" src="images/HeroImageBnB.jpg" alt="Eerste foto kamer">
                                    </div>
                                </div>
                                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Vorige</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Volgende</span>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <span class="float-right pt-4">
                            <span class="float-right">Max. bezetting : @BnBRoomBooking.OrderDetails.BnBRoomDTO.Occupancy personen </span><br />
                            <span class="float-right pt-1">Kameroppervlakte : @BnBRoomBooking.OrderDetails.BnBRoomDTO.RoomSize m²</span><br />
                            @if (BnBRoomBooking.OrderDetails.BnBRoomDTO.PetsAllowed == true)
                            {
                                <span class="float-right">Huisdieren toegelaten op de kamer</span><br />
                            }
                            else
                            {
                                <span class="float-right">Huisdieren NIET toegelaten op de kamer</span><br />
                            }
                            <h4 class="text-warning font-weight-bold pt-5 pl-5">
                                EUR
                                <span style="border-bottom:1px solid #ff6a00">
                                    @BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalAmount.ToString("C")
                                </span>
                            </h4>
                            @if (@BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalDays == 1)
                            {
                                <span class="float-right">Prijs voor @BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalDays nacht</span>
                            }
                            else
                            {
                                <span class="float-right">Prijs voor @BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalDays nachten</span>
                            }
                            
                        </span>
                    </div>
                </div>
                <div class="row p-2">
                    <div class="col-12">
                        <p class="card-title text-warning" style="font-size:xx-large">@BnBRoomBooking.OrderDetails.BnBRoomDTO.RoomName</p>
                        <p class="card-text" style="font-size:large">
                            @((MarkupString)BnBRoomBooking.OrderDetails.BnBRoomDTO.RoomDetails)
                        </p>
                    </div>

                </div>
            </div>

            <div class="col-12 col-lg-5 p-4 2 mt-4 mt-md-0" style="border: 1px solid #333;">
                <EditForm Model="BnBRoomBooking" class="container" OnValidSubmit="HandleCheckout">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <div class="row px-2 text-success border-bottom">
                        <div class="col-7 py-1">
                            <p style="font-size:x-large;margin:0px;">Vul uw gegevens in</p>
                        </div>
                    </div>

                    <div class="form-group pt-2 mt-2">
                        <label class="text-warning">Naam</label>
                        <InputText @bind-Value="BnBRoomBooking.OrderDetails.Name" type="text" class="form-control" />
                        <ValidationMessage For="()=>BnBRoomBooking.OrderDetails.Name"/>
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Telefoonnummer</label>
                        <InputText @bind-Value="BnBRoomBooking.OrderDetails.Phone" type="text" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">Emailadres</label>
                        <InputText @bind-Value="BnBRoomBooking.OrderDetails.Email" type="text" class="form-control" />
                        <ValidationMessage For="()=>BnBRoomBooking.OrderDetails.Email" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">Incheckdatum</label>
                        <InputDate @bind-Value="BnBRoomBooking.OrderDetails.CheckInDate" type="date" disabled class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">Uitcheckdatum</label>
                        <InputDate @bind-Value="BnBRoomBooking.OrderDetails.CheckOutDate" type="date" disabled class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="text-warning">Aantal nachten</label>
                        <select class="form-control" value="@NoOfNights" @onchange="HandleNoOfNightsChange">
                            @for (var i = 1; i <= 14; i++)
                            {
                                if (i == NoOfNights)
                                {
                                    <option value="@i" selected="selected">@i</option>
                                }
                                else
                                {
                                    <option value="@i">@i</option>
                                }

                            }
                        </select>
                    </div>
                    <div class="form-group mt-3">
                        @if (BnBRoomBooking.OrderDetails.BnBRoomDTO.IsBooked)
                        {
                            <input class="btn btn-danger form-control" value="Reeds verhuurd!" />
                        }
                        else
                        {
                            <button type="submit" class="btn btn-success form-control">Nu reserveren</button>
                        }
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}


@*-------------------------------------------------------------------------------------------------------------------------------*@

@code {

    [Parameter]
    public int? Id { get; set; }

    public RoomBookingVM BnBRoomBooking { get; set; } = new RoomBookingVM();

    private int NoOfNights { get; set; } = 1;

    //----------------------------------------------------------------------------------------------------------------------------------

    protected override async Task OnInitializedAsync()
    {
        try
        {
            BnBRoomBooking.OrderDetails = new RoomOrderDetailsDTO();
            if (Id is not null)
            {
                if (await localStorage.GetItemAsync<HomeVM>(LocalStorage.LS_InitialBooking) is not null)
                {
                    var roomInitialInfo = await localStorage.GetItemAsync<HomeVM>(LocalStorage.LS_InitialBooking);
                    BnBRoomBooking.OrderDetails.BnBRoomDTO = await bnbRoomService.GetBnBRoomDetail
                        (Id.Value, roomInitialInfo.StartDate.ToString("dd-MM-yyyy"), roomInitialInfo.EndDate.ToString("dd-MM-yyyy"));
                    NoOfNights = roomInitialInfo.NoOfNights;
                    BnBRoomBooking.OrderDetails.CheckInDate = roomInitialInfo.StartDate;
                    BnBRoomBooking.OrderDetails.CheckOutDate = roomInitialInfo.EndDate;
                    BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalDays = roomInitialInfo.NoOfNights;
                    BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalAmount =
                            roomInitialInfo.NoOfNights * BnBRoomBooking.OrderDetails.BnBRoomDTO.Rate;
                }
                else
                {
                    BnBRoomBooking.OrderDetails.BnBRoomDTO = await bnbRoomService.GetBnBRoomDetail
                       (Id.Value, DateTime.Now.ToString("dd-MM-yyyy"), DateTime.Now.AddDays(1).ToString("dd-MM-yyyy"));
                    NoOfNights = 1;
                    BnBRoomBooking.OrderDetails.CheckInDate = DateTime.Now;
                    BnBRoomBooking.OrderDetails.CheckOutDate = DateTime.Now.AddDays(1);
                    BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalDays = 1;
                    BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalAmount =
                                    BnBRoomBooking.OrderDetails.BnBRoomDTO.Rate;
                }
            }

            if (await localStorage.GetItemAsync<ContactDTO>(LocalStorage.LS_UserDetails) is not null)
            {
                var userInfo = await localStorage.GetItemAsync<ContactDTO>(LocalStorage.LS_UserDetails);
                BnBRoomBooking.OrderDetails.UserId = userInfo.Id;
                BnBRoomBooking.OrderDetails.Name = userInfo.ContactName;
                BnBRoomBooking.OrderDetails.Email = userInfo.Email;
                BnBRoomBooking.OrderDetails.Phone = userInfo.PhoneNumber;
            }

        }
        catch (Exception)
        {
            await jsRuntime.SweetAlertError("Het uploaden van de geselecteerde kamer is niet gelukt. Probeer opnieuw.");
            return;
        }
    }

    private async Task HandleNoOfNightsChange(ChangeEventArgs e)
    {
        NoOfNights = Convert.ToInt32(e.Value.ToString());
        BnBRoomBooking.OrderDetails.BnBRoomDTO = await bnbRoomService.GetBnBRoomDetail(Id.Value,
            BnBRoomBooking.OrderDetails.CheckInDate.ToString("dd-MM-yyyy"),
                BnBRoomBooking.OrderDetails.CheckInDate.AddDays(NoOfNights).ToString("dd-MM-yyyy"));

        BnBRoomBooking.OrderDetails.CheckOutDate = BnBRoomBooking.OrderDetails.CheckInDate.AddDays(NoOfNights);
        BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalDays = NoOfNights;
        BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalAmount = NoOfNights * BnBRoomBooking.OrderDetails.BnBRoomDTO.Rate;
    }

    private async Task HandleCheckout()
    {
        if (string.IsNullOrEmpty(BnBRoomBooking.OrderDetails.Name))
        {
            await jsRuntime.SweetAlertError("Naam is een verplicht veld. Gelieve zeker uw naam in te vullen.");
            return;
        }

        try
        {
            var paymentDTO = new StripePaymentDTO
            {
                Amount = Convert.ToInt32(BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalAmount * 100), // convertion from cents
                BnBRoomProduct = BnBRoomBooking.OrderDetails.BnBRoomDTO.RoomName,
                ReturnUrl = "/bnb/room-details/" + Id
            };

            var result = await stripePaymentService.CheckOut(paymentDTO);
            BnBRoomBooking.OrderDetails.StripeSessionId = result.Data.ToString();
            BnBRoomBooking.OrderDetails.RoomId = BnBRoomBooking.OrderDetails.BnBRoomDTO.RoomId;
            BnBRoomBooking.OrderDetails.TotalCost = BnBRoomBooking.OrderDetails.BnBRoomDTO.TotalAmount;

            var roomOrderDetailsSaved = await roomOrderDetailsService.SaveRoomOrderDetails(BnBRoomBooking.OrderDetails);

            await localStorage.SetItemAsync(LocalStorage.LS_RoomOrderDetails, roomOrderDetailsSaved);

            await jsRuntime.InvokeVoidAsync("redirectToCheckout", result.Data.ToString());
        }
        catch (Exception)
        {
            await jsRuntime.SweetAlertError("Uw aangemaakte reservatie kon niet worden bevestigd. Probeer opnieuw.");
            return;
        }

    }



}
