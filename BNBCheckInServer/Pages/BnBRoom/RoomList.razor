@page "/bnb-room"
@using ModelsDTO
@using Business.Repository.IRepository
@using BNBCheckInServer.Components
@inject IRoomRepository roomRepository
@inject IJSRuntime jsRuntime
@inject Service.IService.IFileUpload fileUpload
@inject NavigationManager navManager

<div class="row mt-4">
    <div class="col-8">
        <h4 class="card-title text-info">B&ampB kamers</h4>
    </div>
    <div class="col-3 offset-1">
        <NavLink href="bnb-room/create" class="btn btn-info form-control">Voeg kamer toe</NavLink>
    </div>
</div>
<br />
<div class="row mt-4">
    <div class="col-12">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Naam kamer</th>
                    <th>Bezetting</th>
                    <th>Prijs per nacht</th>
                    <th>Oppervlakte kamer</th>
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Rooms.Any())
                {
                    foreach (var room in Rooms)
                    {
                        <tr>
                            <td>@room.RoomName</td>
                            <td>@room.Occupancy</td>
                            <td>@room.Rate.ToString("C")</td>
                            <td>@room.RoomSize</td>
                            <td>
                                <NavLink href="@($"bnb-room/edit/{room.RoomId}")" class="btn btn-primary">Wijzigen</NavLink>
                                <button class="btn btn-danger" @onclick="()=>HandleDelete(room.RoomId)">Verwijderen</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">Geen kamers gevonden in de lijst.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<DeleteConfirmation IsParentComponentProcessing="IsProcessing" ConfirmationChanged="ConfirmDelete_Click"></DeleteConfirmation>

@*-----------------------------------------------------------------------------------------------------------------------*@

@code {

    private IEnumerable<RoomDTO> Rooms { get; set; } = new List<RoomDTO>();

    private int? DeleteRoomId { get; set; } = null;

    public bool IsProcessing { get; set; } = false;

    //-----------------------------------------------------------------------------------------------------------------------

    protected async override Task OnInitializedAsync()
    {
        Rooms = await roomRepository.GetAllRooms();
    }

    private async Task HandleDelete(int roomId)
    {
        DeleteRoomId = roomId;
        await jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        if (isConfirmed && DeleteRoomId is not null)
        {
            RoomDTO hotelRoom = await roomRepository.GetRoom(DeleteRoomId.Value);
            foreach (var image in hotelRoom.RoomImages)
            {
                var imageName = image.RoomImageSourceUrl.Replace($"{navManager.BaseUri}images/", "");
                fileUpload.DeleteFile(imageName);
            }
            await roomRepository.DeleteRoom(DeleteRoomId.Value);
            await jsRuntime.SweetAlertSuccess("De kamer werd succesvol verwijderd!");
            Rooms = await roomRepository.GetAllRooms();
        }
        await jsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        IsProcessing = false;
    }
}
