@page "/bnb-amenity/create"
@page "/bnb-amenity/edit/{Id:int}"
@using Business.Repository.IRepository
@using ModelsDTO
@using Serilog
@inject IAmenityRepository amenityRepository
@inject NavigationManager navManager
@inject IJSRuntime jsRuntime

<div class="row mt-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title faciliteit</h3>

    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="@AmenityModel" OnValidSubmit="HandleAmenityUpsert">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label>Naam voorziening</label>
                        <InputText @bind-Value="AmenityModel.AmenityName" class="form-control"></InputText>
                        <ValidationMessage For="()=>AmenityModel.AmenityName"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Prijs per persoon</label>
                        <InputNumber @bind-Value="AmenityModel.AmenityRate" class="form-control"></InputNumber>
                        <ValidationMessage For="()=>AmenityModel.AmenityRate"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Icon</label>
                        <InputText @bind-Value="AmenityModel.AmenityIcon" class="form-control"></InputText>
                        <ValidationMessage For="()=>AmenityModel.AmenityIcon"></ValidationMessage>
                    </div>
                    <div class="form-group" style="height:200px;">
                        <label>Beschrijving van de voorziening</label>
                        <BlazoredTextEditor @ref="@QuillHtml" Placeholder="Plaats hier een korte beschrijving van de voorziening.">
                            <ToolbarContent>
                                <select class="ql-header">
                                    <option selected=""></option>
                                    <option value="1"></option>
                                    <option value="2"></option>
                                    <option value="3"></option>
                                    <option value="4"></option>
                                    <option value="5"></option>
                                </select>
                                <span class="ql-formats">
                                    <button class="ql-bold"></button>
                                    <button class="ql-italic"></button>
                                    <button class="ql-underline"></button>
                                    <button class="ql-strike"></button>
                                </span>
                                <span class="ql-formats">
                                    <select class="ql-color"></select>
                                    <select class="ql-background"></select>
                                </span>
                                <span class="ql-formats">
                                    <button class="ql-list" value="ordered"></button>
                                    <button class="ql-list" value="bullet"></button>
                                </span>
                                <span class="ql-formats">
                                    <button class="ql-link"></button>
                                </span>
                            </ToolbarContent>
                            <EditorContent>
                                <span>@((MarkupString)AmenityModel.AmenityDescription)</span>
                            </EditorContent>
                        </BlazoredTextEditor>
                        <ValidationMessage For="()=>AmenityModel.AmenityDescription"></ValidationMessage>
                    </div>
                    <div class="form-group" style="padding-top:70px;">
                        <button class="btn btn-primary"> @Title faciliteit </button>
                        <NavLink href="@($"bnb-amenity")" class="btn btn-secondary">Terug naar overzicht faciliteiten</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>

</div>

@*-----------------------------------------------------------------------------------------------------------------------*@

@code
{
    [Parameter]
    public int? Id { get; set; }

    internal AmenityDTO AmenityModel { get; set; } = new AmenityDTO();

    internal string Title { get; set; } = "Maak nieuwe";

    internal bool IsProcessingStart { get; set; } = false;

    public BlazoredTextEditor QuillHtml { get; set; } = new BlazoredTextEditor();

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    //-----------------------------------------------------------------------------------------------------------------------------

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationState;
        if (!authenticationState.User.IsInRole(Common.RoleDefinition.Role_Admin))
        {
            var uri = new Uri(navManager.Uri);
            navManager.NavigateTo($"/identity/account/login?returnUrl={uri.LocalPath}", forceLoad: true);
        }

        if (Id != null)
        {
            //Update
            Title = "Wijzig";

            AmenityModel = await amenityRepository.GetAmenity(Id.Value);
        }
        else
        {
            AmenityModel = new AmenityDTO();
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        bool loading = true;
        while (loading)
        {
            try
            {
                if (!string.IsNullOrEmpty(AmenityModel.AmenityDescription))
                {
                    await this.QuillHtml.LoadHTMLContent(AmenityModel.AmenityDescription);
                }
                loading = false;
            }
            catch
            {
                await Task.Delay(10);
                loading = true;
            }
        }
    }

    internal async Task HandleAmenityUpsert()
    {
        IsProcessingStart = true;

        try
        {
            if (AmenityModel.AmenityId != 0 && Title == "Wijzig")
            {
                var amenityDetailsByName = await amenityRepository.IsAmenityUnique(AmenityModel.AmenityName);
                if (amenityDetailsByName != null && amenityDetailsByName.AmenityId != AmenityModel.AmenityId)
                {
                    await jsRuntime.SweetAlertError("Deze B&B- of kamervoorziening bestaat reeds!");
                    return;
                }

                //Update the bnb amenity here
                AmenityModel.AmenityDescription = await QuillHtml.GetHTML();
                var updateAmenityResult = await amenityRepository.UpdateAmenity(AmenityModel.AmenityId, AmenityModel);

                await jsRuntime.SweetAlertSuccess("De voorziening werd aangepast!");
            }
            else
            {

                var amenityDetailsByName = await amenityRepository.IsAmenityUnique(AmenityModel.AmenityName);
                if (amenityDetailsByName != null)
                {
                    await jsRuntime.SweetAlertError("Deze B&B- of kamervoorziening bestaat reeds!");
                }


                //Create new Hotel Amenity here
                AmenityModel.AmenityDescription = await QuillHtml.GetHTML();
                var createdResult = await amenityRepository.CreateAmenity(AmenityModel);
                AmenityModel = new AmenityDTO();
                await jsRuntime.SweetAlertSuccess("Deze voorziening werd aangemaakt en aan de lijst toegevoegd!");

            }
            navManager.NavigateTo("bnb-amenity");
            IsProcessingStart = false;

        }
        catch (Exception ex)
        {
            Log.Error(ex, "An error occured when invoking the 'HandleBnBRoomUpsert'-method.");
            IsProcessingStart = false;
        }
    }
}

