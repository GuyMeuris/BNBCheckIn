@page "/bnbs"
@using ModelsDTO
@using Business.Repository.IRepository
@inject Service.IService.IFileUpload fileUpload 
@inject IBnBRepository bnbRepository 
@inject IJSRuntime jsRuntime
@inject NavigationManager  navManager

<div class="row mt-4">
    <div class="col-8">
        <h4 class="card-title text-info">B&B's</h4>
    </div>
    <div class="col-3 offset-1">
        <NavLink href="bnbs/create" class="btn btn-info form-control">Voeg een B&B toe</NavLink>
    </div>
</div>
<br />
<div class="row mt-4">
    <div class="col-12">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Naam B&B</th>
                    @*<th>Straatnaam</th>
                    <th>Huisnummer</th>
                    <th>Postcode</th>*@
                    <th>Gemeente</th>
                    <th>Provincie</th>
                    @*<th>BTW-nummer</th>
                    <th>Bankrekeningnummer</th>
                    <th>B&B Beschrijving</th>*@
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody>
                @if (BnBs.Any())
                {
                    foreach (var bnb in BnBs)
                    {
                        <tr>
                            <td>@bnb.BnBName</td>
                            @*<td>@bnb.StreetName</td>
                            <td>@bnb.HouseNumber</td>
                            <td>@bnb.PostalCode</td>*@
                            <td>@bnb.Municipality</td>
                            <td>@bnb.Province</td>
                            @*<td>@bnb.VATnr</td>
                            <td>@bnb.BankAccountNr</td>
                            <td>@bnb.BnBDetails</td>*@
                            <td>
                                <NavLink href="@($"bnbs/edit/{bnb.BnBId}")" class="btn btn-primary">Wijzigen</NavLink>
                                <button class="btn btn-danger" @onclick="()=>HandleDelete(bnb.BnBId)">Verwijderen</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">Geen B&B's gevonden in de lijst.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@*-----------------------------------------------------------------------------------------------------------------------*@

@code {

    private IEnumerable<BnBDTO> BnBs { get; set; } = new List<BnBDTO>();

    private int? DeleteBnBId { get; set; } = null;
    public bool IsProcessing { get; set; } = false;

    //-----------------------------------------------------------------------------------------------------------------------

    protected async override Task OnInitializedAsync()
    {
        BnBs = await bnbRepository.GetAllBnBs();
    }

    private async Task HandleDelete(int bnbId)
    {
        DeleteBnBId = bnbId;
        await jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }
    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        if (isConfirmed && DeleteBnBId != null)
        {
            BnBDTO bnbDTO = await bnbRepository.GetBnB(DeleteBnBId.Value);
            foreach (var image in bnbDTO.BnBImages)
            {
                var imageName = image.ImageSourceUrl.Replace($"{navManager.BaseUri}images/", "");
                fileUpload.DeleteFile(imageName);
            }
            await bnbRepository.DeleteBnB(DeleteBnBId.Value);
            await jsRuntime.SweetAlertSuccess("De kamer werd succesvol verwijderd!");
            BnBs = await bnbRepository.GetAllBnBs();
        }
        await jsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        IsProcessing = false;
    }
}
